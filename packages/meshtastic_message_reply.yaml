####################################################################
#   @author         :   WJ4IoT
#   @date           :   23/12/2024
#   @package        :   meshtastic_message_reply
#   @description    :   After Meshtastic MQTT DM msg received ACK with CLI DM msg
####################################################################

# VERSION:
# 20241221 - first version
# 20241223 - some improvements including inut field "HOST" and "response value, removed fixed version.

# This package is inspired from a discussion with @Karel on Telegram "t.me/meshtastic_nl"
# For argument sake Is does not intend to be THE solution to do it this way!

# REQUIREMENTS:
# - Home Assistant
# - own MQTT broker with bridge to desired Meshtatic MQTT server (in this example "pa8f") (see official docs)
# - Mosquitto Broker with bridge (see official docs)
# - working CLI Meshtastic (see official docs)
# - Shell Command settings (included)

# USAGE:
# This setup is as an complete package (benefit you can include this blah blah to explain working)
# save it to your package location. A package requires restart of HA !!!!

# If you are not working with packages yet you can copy the automation to your desired locations or inside 
# the UI. You might need to be aware of different intent.
# The shell_command needs to go into your configuration.yaml (but I would prefer to create a package)

# PLEASE NOTE:
# it looks like that a CLI command will fail when there is activity on the sending NODE.
# Hence the reason to delay X seconds for the ACK hopefully the NODE is after this not occupied.
# However on a busy mesh that might still not resulting in an correct action. 
# Now included to the capturing of this returncode but no 2nd action yet if this 1st action fails.

shell_command:
  meshtastic_reply: meshtastic --tcp "{{ states('input_text.meshtastic_reply_host') }}" --sendtext "{{ states('input_text.meshtastic_reply_msg') }}" --dest "{{ states('input_text.meshtastic_reply_to') }}" 

# Please change the inital fields with your values!
# After restart of HA create a card with these input fields on your dashboard and (re-)check values
input_text:
  meshtastic_reply_host:
    name: Meshtastic Reply Host
    initial: "192.168.ip.ip"
    min: 0
    max: 190

  meshtastic_reply_msg:
    name: Meshtastic Reply Message
    initial: Message Received
    min: 0
    max: 190

  meshtastic_reply_to:
    name: Meshtastic Reply To
    initial: "!node2reply2"
    min: 0
    max: 190

  meshtastic_reply_code:
    name: Meshtastic Reply Code
    initial: "X"
    min: 0
    max: 10

automation:
# Please change topic and from field 
- id: meshtastic_dm_message_received
  alias: meshtastic_dm_message_received
  description: After Meshtastic MQTT DM msg received ACK with CLI DM msg
  triggers:
    - topic: msh/pa8f/2500-2599/2/json/PKI/!433abcde
      value_template: >
        {% if value_json.from == 123456789 and value_json.type == "text" %}on{%
        endif %}
      payload: "on"
      id: text
      trigger: mqtt
  conditions: []
  actions:
  - variables:
      text: "{{ trigger.payload_json.payload.text }}"
  - action: input_text.set_value
    metadata: {}
    data:
      value: "X"
    target:
      entity_id: input_text.meshtastic_reply_code
  - action: input_text.set_value
    metadata: {}
    data:
      value: "Received msg {{ text }}"
    target:
      entity_id: input_text.meshtastic_reply_msg
  - delay: '00:00:15'
  - action: shell_command.meshtastic_reply
    metadata: {}
    data:
      filename: "todo.txt"
    response_variable: todo_response
  - action: input_text.set_value
    metadata: {}
    data:
      value: "{{ todo_response['returncode']}}"
    target:
      entity_id: input_text.meshtastic_reply_code
  - action: input_text.set_value
    metadata: {}
    data:
      value: "Received msg {{ text }}"
    target:
      entity_id: input_text.meshtastic_reply_msg
  - stop: Just the end
